permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - master

jobs:
  build-dev:
    runs-on: ubuntu-latest
    steps:
      # 깃헙 Repository 코드 내려받기
      - name: Checkout
        uses: actions/checkout@v4

      # JAVA 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      # Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 운영 환경 설정 파일 생성
      - name: make application.yml
        run: |
          cd ./src/main/resources 
          touch ./application.yml 
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      # 테스트 환경 설정 파일 생성
      - name: make application-test.yml
        run: |
          cd ./src/test/resources 
          touch ./application-test.yml 
          echo "${{ secrets.TEST_YML }}" > ./application-test.yml

      # gradlew 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 프로젝트 빌드
      - name: Build with Gradle
        shell: bash
        run: ./gradlew build

#      # 테스트 빌드
      #      - name: Test Build with Gradle
      #        run: ./gradlew test

#      # test 결과 업로드
#      - name: Upload test results
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-results
#          path: build/test-results

#      # Coverage 동작 확인
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          file: ./build/reports/jacoco/test/jacocoTestReport.xml

#      # PR 코멘트에 테스트 커버리지 리포트 등록
#      - name: Generate and Post test coverage report in PR
#        id: jacoco
#        uses: madrapps/jacoco-report@v1.2
#        with:
#          title: 📝 테스트 커버리지 리포트입니다
#          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
#          token: ${{ secrets.GIT_HUB_TOKEN }}
#          min-coverage-overall: 50
#          min-cove`rage-changed-files: 50
#
#      # PR 코멘트에 테스트 결과 등록
#      - name: Include test coverage report in PR comments
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        if: always()
#        with:
#          files: '**/build/test-results/test/TEST-*.xml'